(()=>{"use strict";var e=Object.defineProperty,r=Object.defineProperties,t=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,i=(r,t,o)=>t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[t]=o,l=(e,r,t)=>new Promise(((o,s)=>{var n=e=>{try{l(t.next(e))}catch(e){s(e)}},i=e=>{try{l(t.throw(e))}catch(e){s(e)}},l=e=>e.done?o(e.value):Promise.resolve(e.value).then(n,i);l((t=t.apply(e,r)).next())}));let a=null,c=null,u=null,d=!1,p=!1;const w=(e,a)=>l(void 0,null,(function*(){if(!e.clientId)return void(d&&console.log("-- (rtr-sw) PASSTHROUGH: no clientId"));const l=yield self.clients.get(e.clientId);var c;l?(d&&console.log("-- (rtr-sw) => sending",a),l.postMessage((c=((e,r)=>{for(var t in r||(r={}))s.call(r,t)&&i(e,t,r[t]);if(o)for(var t of o(r))n.call(r,t)&&i(e,t,r[t]);return e})({},a),r(c,t({source:"@folio/stripes-core"}))))):d&&console.log("-- (rtr-sw) PASSTHROUGH: no client")})),g=e=>({atExpires:Date.now()+.8*(e.tokenExpiration.atExpires-Date.now()),rtExpires:Date.now()+.8*(e.tokenExpiration.rtExpires-Date.now())}),f=e=>(e=>l(void 0,null,(function*(){if(d&&console.log("-- (rtr-sw) ** RTR ..."),p){for(let e=0;e<100;e++)if(d&&console.log("-- (rtr-sw) **    is rotating; waiting 100ms"),yield new Promise((e=>setTimeout(e,100))),!p)return Promise.resolve();return Promise.reject(new Error("in-process RTR timed out"))}return p=!0,fetch(`${c}/authn/refresh`,{headers:{"content-type":"application/json","x-okapi-tenant":u},method:"POST",credentials:"include",mode:"cors"}).then((e=>e.ok?e.json():e.json().then((e=>{throw p=!1,Array.isArray(e.errors)&&e.errors[0]?new Error(`${e.errors[0].message} (${e.errors[0].code})`):new Error("RTR response failure")})))).then((r=>{d&&console.log("-- (rtr-sw) **     success!"),p=!1,a=g({tokenExpiration:{atExpires:new Date(r.accessTokenExpiration).getTime(),rtExpires:new Date(r.refreshTokenExpiration).getTime()}}),w(e,{type:"TOKEN_EXPIRATION",value:{tokenExpiration:a}})}))})))(e).then((()=>{const r=e.request.clone();return d&&console.log("-- (rtr-sw) => post-rtr-fetch",r.url),fetch(e.request,{credentials:"include"})})).catch((r=>(w(e,{type:"RTR_ERROR",error:r}),Promise.resolve(new Response(JSON.stringify({})))))),h=(e,r,t)=>{const o=e.request.clone();return((e,r)=>(d&&console.log(`-- (rtr-sw) isOkapiRequest: ${new URL(e.url).origin} === ${c}`),new URL(e.url).origin===r))(o,t)?(d&&console.log("-- (rtr-sw) => will fetch",o.url),((e,r)=>!!["/authn/logout"].find((t=>e.url.startsWith(`${r}${t}`))))(o,t)?(e=>(d&&console.log("-- (rtr-sw)    (logout request)"),fetch(e.request,{credentials:"include"}).catch((e=>(console.error("-- (rtr-sw) logout failure",e),Promise.resolve(new Response(JSON.stringify({}))))))))(e):((e,r,t)=>!!(e=>{const r=!!((null==e?void 0:e.atExpires)>Date.now());return d&&console.log(`-- (rtr-sw) => at isValid? ${r}; expires ${new Date((null==e?void 0:e.atExpires)||null).toISOString()}`),r})(r)||(d&&console.log(`-- (rtr-sw) AT invalid for ${e.url}`),!!["/bl-users/forgotten/password","/bl-users/forgotten/username","/bl-users/login-with-expiry","/bl-users/password-reset","/saml/check"].find((r=>e.url.startsWith(`${t}${r}`)))))(o,r,t)?(e=>(d&&console.log("-- (rtr-sw)    (valid AT or authn request)"),fetch(e.request,{credentials:"include"}).then((r=>403===r.status&&"text/plain"===r.headers["content-type"]?r.clone().text().then((t=>t.startsWith("Token missing")?(d&&console.log("-- (rtr-sw)    (whoops, invalid AT; retrying)"),f(e)):r)):r))))(e):(e=>{const r=!!((null==e?void 0:e.rtExpires)>Date.now());return d&&console.log(`-- (rtr-sw) => rt isValid? ${r}; expires ${new Date((null==e?void 0:e.rtExpires)||null).toISOString()}`),r})(r)?(d&&console.log("-- (rtr-sw) =>      valid RT"),f(e)):(w(e,{type:"RTR_ERROR",error:`AT/RT failure accessing ${o.url}`}),Promise.resolve(new Response(JSON.stringify({}))))):fetch(e.request,{credentials:"include"}).catch((e=>(console.error(e),Promise.reject(new Error(e)))))};self.addEventListener("install",(e=>(d&&console.log("-- (rtr-sw) => install",e),self.skipWaiting()))),self.addEventListener("activate",(e=>{d&&console.log("-- (rtr-sw) => activate",e),e.waitUntil(self.clients.claim())})),self.addEventListener("message",(e=>{var r;e.origin&&e.origin===self.location.origin&&"@folio/stripes-core"===e.data.source&&(d&&console.info("-- (rtr-sw) reading",e.data),"OKAPI_CONFIG"===e.data.type&&(c=e.data.value.url,u=e.data.value.tenant),"LOGGER_CONFIG"===e.data.type&&(d=!!(null==(r=e.data.value.categories)?void 0:r.split(",").some((e=>"rtr-sw"===e)))),"TOKEN_EXPIRATION"===e.data.type&&(a=g(e.data.value)))})),self.addEventListener("fetch",(e=>{e.respondWith(h(e,a,c))}))})();